#!/usr/bin/env ruby

require "stringio"
require "json"

def capture_output(new_stdout, new_stderr)
  begin
    $stdout, save_stdout = new_stdout, $stdout
    $stderr, save_stderr = new_stderr, $stderr
    yield
  ensure
    $stdout = save_stdout
    $stderr = save_stderr
  end
end

def eval_and_capture_output(code, context)
  response = {}
  output = StringIO.new
  capture_output(output, output) do
    begin
      eval(code, context)
    rescue Exception => e
      response["error"] = "#{e.class}: #{e.message}"
    end
  end
  response["output"] = output.string
  response
end

def new_binding
  Object.new.instance_eval{ binding }
end

bindings = Hash.new{|h,k| h[k] = new_binding}

STDOUT.sync = true

STDIN.each_line do |line|
  data = JSON.parse(line)
  code = data["code"]
  session_id = data["session_id"]
  response = eval_and_capture_output(code, bindings[session_id])
  puts response.to_json
end
